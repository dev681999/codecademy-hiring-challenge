// Code generated by ent, DO NOT EDIT.

package ent

import (
	"catinator-backend/pkg/db/ent/cat"
	"catinator-backend/pkg/db/ent/user"
	"catinator-backend/pkg/db/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	catMixin := schema.Cat{}.Mixin()
	catMixinFields0 := catMixin[0].Fields()
	_ = catMixinFields0
	catFields := schema.Cat{}.Fields()
	_ = catFields
	// catDescCreateTime is the schema descriptor for create_time field.
	catDescCreateTime := catMixinFields0[0].Descriptor()
	// cat.DefaultCreateTime holds the default value on creation for the create_time field.
	cat.DefaultCreateTime = catDescCreateTime.Default.(func() time.Time)
	// catDescUpdateTime is the schema descriptor for update_time field.
	catDescUpdateTime := catMixinFields0[1].Descriptor()
	// cat.DefaultUpdateTime holds the default value on creation for the update_time field.
	cat.DefaultUpdateTime = catDescUpdateTime.Default.(func() time.Time)
	// cat.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	cat.UpdateDefaultUpdateTime = catDescUpdateTime.UpdateDefault.(func() time.Time)
	// catDescName is the schema descriptor for name field.
	catDescName := catFields[1].Descriptor()
	// cat.DefaultName holds the default value on creation for the name field.
	cat.DefaultName = catDescName.Default.(string)
	// catDescDescription is the schema descriptor for description field.
	catDescDescription := catFields[2].Descriptor()
	// cat.DefaultDescription holds the default value on creation for the description field.
	cat.DefaultDescription = catDescDescription.Default.(string)
	// catDescImageID is the schema descriptor for image_id field.
	catDescImageID := catFields[3].Descriptor()
	// cat.DefaultImageID holds the default value on creation for the image_id field.
	cat.DefaultImageID = catDescImageID.Default.(string)
	// catDescTags is the schema descriptor for tags field.
	catDescTags := catFields[5].Descriptor()
	// cat.DefaultTags holds the default value on creation for the tags field.
	cat.DefaultTags = catDescTags.Default.([]string)
	// catDescID is the schema descriptor for id field.
	catDescID := catFields[0].Descriptor()
	// cat.DefaultID holds the default value on creation for the id field.
	cat.DefaultID = catDescID.Default.(func() string)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[0].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userMixinFields0[1].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.DefaultName holds the default value on creation for the name field.
	user.DefaultName = userDescName.Default.(string)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() string)
}
